@page "/quiz/{QuizId}"
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (currentQuiz == null)
{
    <p>Loading quiz...</p>
}
else
{
    <h3>@currentQuiz.Title</h3>

    <EditForm Model="@answers" OnValidSubmit="@SubmitQuiz">
        @foreach (var (question, index) in currentQuiz.Questions.Select((q,i) => (q,i)))
        {
            <div class="question-card">
                <h5>Question @(index+1): @question.Text</h5>
                @foreach (var (option, optionIndex) in question.Options.Select((o,i) => (o,i)))
                {
                    <label>
                        <input type="radio"
                               name="question-@index"
                               value="@optionIndex"
                               @bind="answers[index]" />
                        @option
                    </label>
                }
            </div>
        }
        <button type="submit" class="btn btn-success">Submit Answers</button>
    </EditForm>
}

@code {
    [Parameter] public int QuizId { get; set; }
    private QuizModel currentQuiz;  // Renamed this to avoid conflict
    private List<int> answers = new();

    protected override async Task OnInitializedAsync()
    {
        currentQuiz = await Http.GetFromJsonAsync<QuizModel>($"api/quizzes/{QuizId}");
        answers = new List<int>(new int[currentQuiz.Questions.Count]);
    }

    private async Task SubmitQuiz()
    {
        var result = await Http.PostAsJsonAsync($"api/quizzes/{QuizId}/submit", answers);
        if (result.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/scores");
        }
    }

    public class QuizModel  // Renamed the class to QuizModel to avoid conflict
    {
        public int Id { get; set; }
        public string Title { get; set; } = string.Empty;
        public List<Question> Questions { get; set; } = new();
    }

    public class Question
    {
        public string Text { get; set; } = string.Empty;
        public List<string> Options { get; set; } = new();
    }
}
